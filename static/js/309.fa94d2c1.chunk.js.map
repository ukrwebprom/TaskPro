{"version":3,"file":"static/js/309.fa94d2c1.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","components/WelcomeLayout/WelcomeLayout.jsx","webpack://taskpro/./src/components/forms/LoginForm/LoginForm.module.css?8bf3","components/forms/LoginForm/LoginForm.js","webpack://taskpro/./src/components/forms/RegisterForm/Registerform.module.css?084e","components/forms/RegisterForm/RegisterForm.js","pages/Auth.js","schems/validationLoginSchema.js","schems/validationRegisterSchema.js","schems/validationNewBoardSchema.js","schems/validationHelpSchema.js","schems/validationCardSchema.js","schems/validationColumnSchema.js","schems/validationEditProfileSchema.js","webpack://taskpro/./src/components/WelcomeLayout/WelcomeLayout.module.css?653c","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from 'react';\n\nconst Button = ({ type = 'button', className, children, ...otherProps }) => {\n  return (\n    <button type={type} className={className} {...otherProps}>\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","import css from './WelcomeLayout.module.css'\nexport const WelcomeLayout = ({children}) => {\n    return(\n        <div className={css.container}>\n            <div className={css.content}>\n                {children}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"LoginForm_wrap__SAWwp\",\"regtitle\":\"LoginForm_regtitle__dt-BC\",\"regtitleActive\":\"LoginForm_regtitleActive__O5ybS\",\"label\":\"LoginForm_label__pAfdy\",\"input\":\"LoginForm_input__iqQPD\",\"field\":\"LoginForm_field__6D429\",\"titleFild\":\"LoginForm_titleFild__--O5+\",\"btn\":\"LoginForm_btn__MgabS\",\"error\":\"LoginForm_error__XSPda\",\"eyeicon\":\"LoginForm_eyeicon__kkjZX\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationLoginSchema } from \"schems\";\nimport Button from \"components/Button/Button\";\nimport Icon from \"components/Icon/Icon\";\nimport s from \"./LoginForm.module.css\"\n// import { useUser } from \"hooks/useUser\";\nimport { useState } from \"react\";\nimport { login } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const LoginForm = () => {\n  // const {userLogin} = useUser();\n  const dispatch = useDispatch();\n  const [type,setType]= useState(\"password\");\n  const [iconName, setIconName]= useState(\"#eye-icon\")\n  \n  const handleShow=(e)=>{\n    const gettype = e.currentTarget.value;\n    console.log(gettype)\n    if (gettype===\"password\"){\n      setType(\"text\");\n      setIconName(\"#eye-slash-icon\")\n    } else{\n      setType(\"password\")\n      setIconName(\"#eye-icon\")\n    }\n  }  \n\n  // const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    \n  //   try{\n  //     await userLogin(values);\n  //     setSubmitting(false);\n  //     resetForm();\n  //   } catch(err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      login({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  };\n\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationLoginSchema}\n      onSubmit={handleSubmit}\n      validateOnBlur\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <div className={s.wrap}>\n        <Form >\n          <div className={s.titleFild}>\n          <a  href=\"register\" className= {s.regtitle}>Registration</a>\n          <p  className= {s.regtitleActive}>Log In</p>\n          </div>\n          <div className={s.field}>\n          <label className={s.label}>\n            <Field className= {s.input} name=\"email\" placeholder=\"Enter your email\" type=\"email\" />\n            <ErrorMessage name=\"email\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n\n          <label className={s.label}>\n            <Field \n             className= {s.input}\n              name=\"password\"\n              placeholder=\"Confirm a password\"\n              type={type}\n            /> \n              <button  type=\"button\" \n            className={s.eyeicon} \n            value={type}  \n            onClick={(e)=>handleShow(e)} >\n            <Icon name ={iconName}/>\n            </button>\n          </label>\n          </div>\n          < Button className={s.btn} type=\"submit\" disabled={isSubmitting || !isValid || !dirty}>Log In Now</Button>\n        </Form>\n       \n             </div>\n      )}\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Registerform_wrap__EFELx\",\"titleFild\":\"Registerform_titleFild__ioAJn\",\"regtitle\":\"Registerform_regtitle__2KOSk\",\"regtitleActive\":\"Registerform_regtitleActive__vQYtO\",\"label\":\"Registerform_label__0MSKF\",\"input\":\"Registerform_input__ozt8M\",\"field\":\"Registerform_field__3T2hC\",\"btn\":\"Registerform_btn__-Ehju\",\"error\":\"Registerform_error__AFMaO\",\"wrong\":\"Registerform_wrong__7hoPD\",\"eyeicon\":\"Registerform_eyeicon__fKI1+\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationRegistrSchema } from \"schems\";\nimport { useState } from \"react\";\nimport Button from \"..//..//Button/Button.jsx\"\nimport s from \"./Registerform.module.css\"\nimport Icon from \"components/Icon/Icon\";\n// import { useUser } from \"hooks/useUser\";\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\n\n\nexport const RegisterForm = () => {\n  // const {userRegister} = useUser();\nconst dispatch = useDispatch();\nconst [type,setType]= useState(\"password\");\nconst [iconName, setIconName]= useState(\"#eye-icon\");\n\n\nconst handleShow=(e)=>{\n  const gettype = e.currentTarget.value;\n  console.log(gettype)\n  if (gettype===\"password\"){\n    setType(\"text\");\n    setIconName(\"#eye-slash-icon\")\n  } else{\n    setType(\"password\")\n    setIconName(\"#eye-icon\")\n  }\n\n}\n  // const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n  //   try {\n  //     await userRegister(values);\n  //     setSubmitting(false);\n  //     resetForm();\n  //   } catch (err) {\n  //     console.log(err);\n  //     console.log(\"єто моя 409\");\n  //   }\n  // };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationRegistrSchema}\n      onSubmit={handleSubmit}\n      validateOnBlur\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <div className={s.wrap}>\n        <Form >\n          <div className={s.titleFild}>\n          <p  className= {s.regtitleActive}>Registration</p>\n          <a href=\"log\"   className= {s.regtitle}>Log In</a>\n          </div>\n         < div className={s.field}>\n          <label className= {s.label}>\n            <Field className= {s.input}\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              autoComplete=\"off\"\n            />\n          \n            <ErrorMessage name=\"name\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n\n          <label className= {s.label}>\n            <Field className= {s.input}\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"email\"\n              autoComplete=\"off\"\n            />\n            <ErrorMessage name=\"email\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n\n          <label className= {s.label}>\n            <Field  className= {s.input}\n              name=\"password\"\n              placeholder=\"Create a password\"\n              type={type}\n              autoComplete=\"off\"\n                        />\n            <button  type=\"button\" \n            className={s.eyeicon} \n            value={type}  \n            onClick={(e)=>handleShow(e)} >\n            <Icon name ={iconName}/>\n            </button>\n            <ErrorMessage \n            name=\"password\" \n            component=\"div\"\n            className={s.error}\n            />\n          </label>\n          </ div>\n          <Button className={s.btn} type=\"submit\" disabled={isSubmitting || !isValid || !dirty}> Register Now</Button>\n        </Form> \n        \n        </div>\n       \n      )}\n    </Formik>\n  );\n};\n","import { WelcomeLayout } from \"components/WelcomeLayout/WelcomeLayout\";\nimport { useParams } from \"react-router-dom\";\nimport { LoginForm } from \"components/forms/LoginForm/LoginForm\";\nimport { RegisterForm } from \"components/forms/RegisterForm/RegisterForm\";\nimport { Suspense } from \"react\";\n\nconst Auth = () => {\n  const { id } = useParams();\n  const getForm = (id) => {\n    switch(id) {\n      case 'login':\n        return <LoginForm />;\n      case 'register':\n        return <RegisterForm />;\n      default:\n        return <LoginForm />;\n    }\n  }\n  return (\n    <Suspense fallback={<p>Loading...</p>}>\n    <WelcomeLayout>\n      {getForm(id)}\n    </WelcomeLayout>\n    </Suspense>\n  );\n};\n\nexport default Auth;\n","import * as Yup from \"yup\";\n\nexport const validationLoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationRegistrSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationNewBoardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Require\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  icon: Yup.string().required(\"Is Require\"),\n\n  background: Yup.string().required(\"Is Require\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationHelpSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  comment: Yup.string()\n    .required(\"Is Require\")\n    .min(10, \"The name must contain at least 10 characters\")\n    .max(200, \"The name must contain less than 200 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Require\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  description: Yup.string()\n    .min(5, \"The description must contain at least 5 characters\")\n    .max(200, \"The description must contain less than 200 characters\"),\n\n  labelColor: Yup.string().required(\"Is Require\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationColumnSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Require\")\n    .min(3, \"The title must contain at least 3 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationEditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n\n  userPhoto: Yup.mixed()\n    .nullable(true)\n    .test(\"fileSize\", \"File size too large\", (value) => {\n      return !value || (value && value.size <= 4096000); // ~4MB\n    })\n    .test(\"fileType\", \"Invalid file type\", (value) => {\n      return (\n        !value ||\n        (value && [\"image/jpeg\", \"image/png\", \"image/gif\"].includes(value.type))\n      );\n    }),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WelcomeLayout_container__KDJpp\",\"content\":\"WelcomeLayout_content__VuvIh\",\"logowrap\":\"WelcomeLayout_logowrap__ouqz4\",\"regbtn\":\"WelcomeLayout_regbtn__OO93W\",\"paragraph\":\"WelcomeLayout_paragraph__TpzpT\",\"regbtntext\":\"WelcomeLayout_regbtntext__kokA3\",\"logintext\":\"WelcomeLayout_logintext__Sno+C\"};","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["_ref","_ref$type","type","className","children","otherProps","_objectWithoutProperties","_excluded","_jsx","_objectSpread","WelcomeLayout","css","container","content","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setType","_useState3","_useState4","iconName","setIconName","Formik","initialValues","email","password","validationSchema","validationLoginSchema","onSubmit","values","actions","login","resetForm","validateOnBlur","isSubmitting","isValid","dirty","s","_jsxs","Form","href","Field","name","placeholder","ErrorMessage","component","value","onClick","e","gettype","currentTarget","console","log","handleShow","Icon","Button","disabled","RegisterForm","validationRegistrSchema","register","autoComplete","id","useParams","Suspense","fallback","getForm","Yup","shape","required","matches","min","max","validationNewBoardSchema","comment","title","icon","background","validationCardSchema","description","labelColor","validationColumnSchema","validationEditProfileSchema","userPhoto","nullable","test","size","includes","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutPropertiesLoose","sourceKeys","keys"],"sourceRoot":""}