{"version":3,"file":"static/js/503.8a393323.chunk.js","mappings":"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","sources":["webpack://taskpro/./src/components/Button/Btn.module.css?6107","components/Button/Button.jsx","components/WelcomeLayout/WelcomeLayout.jsx","webpack://taskpro/./src/components/forms/ErrorMessage/ErrorTip.module.css?8a09","components/forms/ErrorMessage/ErrorTip.jsx","webpack://taskpro/./src/components/forms/LoginForm/LoginForm.module.css?8bf3","components/forms/LoginForm/LoginForm.js","webpack://taskpro/./src/components/forms/RegisterForm/Registerform.module.css?084e","api/ServerAPI.js","components/forms/RegisterForm/RegisterForm.js","pages/Auth.js","schems/validationLoginSchema.js","schems/validationRegisterSchema.js","schems/validationHelpSchema.js","schems/validationNewBoardSchema.js","schems/validationCardSchema.js","schems/validationColumnSchema.js","schems/validationEditProfileSchema.js","webpack://taskpro/./src/components/WelcomeLayout/WelcomeLayout.module.css?653c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Btn_btn__cDq+h\",\"invertBtn\":\"Btn_invertBtn__cMqwS Btn_btn__cDq+h\",\"wrapperIcon\":\"Btn_wrapperIcon__t6DwO\",\"invertIcon\":\"Btn_invertIcon__h3YY4 Btn_wrapperIcon__t6DwO\",\"title\":\"Btn_title__xBGYm\"};","import css from './Btn.module.css'\nimport sprite from '../../images/sprite.svg'\n\nconst Button = ({ type = 'button', title, icon=true, invert=false, action }) => {\n  return (\n    <button type={type} className={invert? css.invertBtn : css.btn} onClick={action} >\n      {icon && \n        <div className={invert? css.invertIcon : css.wrapperIcon}>\n          <svg width='18px' height='18px' stroke=\"currentColor\">\n                      <use href={sprite + \"#plus-icon\"} />\n          </svg>\n        </div>}\n      <span className={css.title}>{title}</span>\n    </button>\n  );\n};\nexport default Button;\n","import css from './WelcomeLayout.module.css'\n\nexport const WelcomeLayout = ({children}) => {\n    return(\n        <div className={css.container}>\n            <div className={css.content}>\n\n                {children}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"tip\":\"ErrorTip_tip__wNok-\",\"message\":\"ErrorTip_message__XvNr5\"};","import Icon from \"components/Icon/Icon\"\nimport css from './ErrorTip.module.css';\nexport const ErrorTip =({ e })=> {\n    return(\n        <div className={css.tip}>\n            <Icon name={'#error'} />\n            <p className={css.message}>{e}</p>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"LoginForm_wrap__SAWwp\",\"regtitle\":\"LoginForm_regtitle__dt-BC\",\"regtitleActive\":\"LoginForm_regtitleActive__O5ybS\",\"label\":\"LoginForm_label__pAfdy\",\"input\":\"LoginForm_input__iqQPD\",\"field\":\"LoginForm_field__6D429\",\"titleFild\":\"LoginForm_titleFild__--O5+\",\"btn\":\"LoginForm_btn__MgabS\",\"error\":\"LoginForm_error__XSPda\",\"eyeicon\":\"LoginForm_eyeicon__kkjZX\",\"mistake\":\"LoginForm_mistake__759tp\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationLoginSchema } from \"schems\";\nimport Button from \"components/Button/Button\";\nimport Icon from \"components/Icon/Icon\";\nimport { ErrorTip } from \"../ErrorMessage/ErrorTip\";\nimport s from \"./LoginForm.module.css\";\nimport { useState } from \"react\";\nimport { login } from \"redux/auth/operations\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"hooks/useAuth\";\n\nexport const LoginForm = () => {\n  const { error } = useAuth();\n  const dispatch = useDispatch();\n  const [type, setType] = useState(\"password\");\n  const [iconName, setIconName] = useState(\"#eye-icon\");\n\n  const handleShow = (e) => {\n    const gettype = e.currentTarget.value;\n    console.log(gettype);\n    if (gettype === \"password\") {\n      setType(\"text\");\n      setIconName(\"#eye-slash-icon\");\n    } else {\n      setType(\"password\");\n      setIconName(\"#eye-icon\");\n    }\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      login({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationLoginSchema}\n      onSubmit={handleSubmit}\n      validationOnBlur={true}\n    >\n      {({ isSubmitting, dirty }) => (\n        <div className={s.wrap}>\n          <Form>\n            <div className={s.titleFild}>\n              <a href=\"register\" className={s.regtitle}>\n                Registration\n              </a>\n              <p className={s.regtitleActive}>Log In</p>\n            </div>\n            {error && <ErrorTip e={error} />}\n            <div className={s.field}>\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  autoFocus\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className={s.error}\n                />\n              </label>\n\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"password\"\n                  placeholder=\"Confirm a password\"\n                  type={type}\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className={s.error}\n                />\n                <button\n                  type=\"button\"\n                  className={s.eyeicon}\n                  value={type}\n                  onClick={(e) => handleShow(e)}\n                >\n                  <Icon name={iconName} />\n                </button>\n              </label>\n            </div>\n            <Button\n              invert={false}\n              title=\"Log In Now\"\n              icon={false}\n              type=\"submit\"\n              disabled={isSubmitting || !dirty}\n            />\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Registerform_wrap__EFELx\",\"titleFild\":\"Registerform_titleFild__ioAJn\",\"regtitle\":\"Registerform_regtitle__2KOSk\",\"regtitleActive\":\"Registerform_regtitleActive__vQYtO\",\"label\":\"Registerform_label__0MSKF\",\"input\":\"Registerform_input__ozt8M\",\"field\":\"Registerform_field__3T2hC\",\"btn\":\"Registerform_btn__-Ehju\",\"error\":\"Registerform_error__AFMaO\",\"mistake\":\"Registerform_mistake__iGAvQ\",\"wrong\":\"Registerform_wrong__7hoPD\",\"eyeicon\":\"Registerform_eyeicon__fKI1+\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://taskpro-41yf.onrender.com';\n\nexport const sendTempPicture = async () => {\n   const res = await axios.post(\"/user/logout\");\n   localStorage.setItem(\"refreshToken\", \"\");\n   return res.data;\n};\n\nexport const registerUser = async (data) => {\n    const res = await axios.post(\"/user/register\", data);\n    return res.data;\n}\n\n// const setAuthToken = token => {\n//     axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n// }\n\n/* const resetAuthToken = () => {\n    axios.defaults.headers.common.Authorization = '';\n} */\n\n// axios.interceptors.response.use(\n//   (response) => response,\n//   async (error) => {\n//     if (error.response.status == 401) {\n//       try {\n//         const refreshToken = localStorage.getItem(\"refreshToken\");\n\n//         const { data } = await axios.post(\"/user/refresh\", { refreshToken });\n//         setAuthToken(data.token);\n//         localStorage.setItem(\"authToken\", `\"${data.token}\"`);\n//         localStorage.setItem(\"refreshToken\", data.refreshToken);\n//         error.config.headers.authorization = `Bearer ${data.token}`;\n//         return axios.request(error.config);\n//       } catch (error) {\n//         return Promise.reject(error);\n//       }\n//     }\n//     return Promise.reject(error);\n//   }\n// );\n\n// export const getMe = async (token) => {\n//   setAuthToken(token);\n//   const res = await axios.get(\"/user/me\");\n//   return res.data;\n// };\n\n// export const updTheme = async (theme) => {\n//   const res = await axios.patch(\"/user/theme\", { theme });\n//   return res.data;\n// };\n\n// export const login = async (data) => {\n//   const res = await axios.post(\"/user/login\", data);\n//   if (res.data.token) setAuthToken(res.data.token);\n//   localStorage.setItem(\"refreshToken\", res.data.refreshToken);\n//   return res.data;\n// };\n\n// export const logout = async () => {\n//   const res = await axios.post(\"/user/logout\");\n//   localStorage.setItem(\"refreshToken\", \"\");\n//   return res.data;\n// };\n\n// export const register = async (data) => {\n//   const res = await axios.post(\"/user/register\", data);\n//   return res.data;\n// };\n\n// export const getBoards = async () => {\n//   const res = await axios.get(\"/boards\");\n//   return res.data;\n// };\n\n// export const getBoards = async () => {\n//     const res = await axios.get('/boards');\n//     return res.data;\n// }\n\n// export const deleteBoard = async (id) => {\n//   const res = await axios.delete(\"/boards/\" + id);\n//   return res.data;\n// };\n\n// export const getBoard = async (id) => {\n//     const res = await axios.get(\"/boards/\" + id);\n//     return res.data;\n//   };\n","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationRegistrSchema } from \"schems\";\nimport { useState } from \"react\";\nimport Button from \"..//..//Button/Button.jsx\";\nimport { ErrorTip } from \"../ErrorMessage/ErrorTip\";\nimport s from \"./Registerform.module.css\";\nimport Icon from \"components/Icon/Icon\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"redux/auth/operations\";\nimport { registerUser } from \"api/ServerAPI.js\";\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState(\"password\");\n  const [iconName, setIconName] = useState(\"#eye-icon\");\n  const [error, setError] = useState(null);\n\n  const handleShow = (e) => {\n    const gettype = e.currentTarget.value;\n    if (gettype === \"password\") {\n      setType(\"text\");\n      setIconName(\"#eye-slash-icon\");\n    } else {\n      setType(\"password\");\n      setIconName(\"#eye-icon\");\n    }\n  };\n\n  const handleSubmit = async (values, actions) => {\n    try {\n      await registerUser(values);\n      actions.resetForm();\n      dispatch(\n        login({\n          email: values.email,\n          password: values.password,\n        })\n      );\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationRegistrSchema}\n      onSubmit={handleSubmit}\n      validationOnBlur={true}\n    >\n      {({ isSubmitting, dirty }) => (\n        <div className={s.wrap}>\n          <Form>\n            <div className={s.titleFild}>\n              <p className={s.regtitleActive}>Registration</p>\n              <a href=\"log\" className={s.regtitle}>\n                Log In\n              </a>\n            </div>\n            {error && <ErrorTip e={error} />}\n            <div className={s.field}>\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"name\"\n                  placeholder=\"Enter your name\"\n                  autoFocus\n                />\n\n                <ErrorMessage name=\"name\" component=\"div\" className={s.error} />\n              </label>\n\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className={s.error}\n                />\n              </label>\n\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"password\"\n                  placeholder=\"Create a password\"\n                  type={type}\n                />\n                <button\n                  type=\"button\"\n                  className={s.eyeicon}\n                  value={type}\n                  onClick={(e) => handleShow(e)}\n                >\n                  <Icon name={iconName} />\n                </button>\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className={s.error}\n                />\n              </label>\n            </div>\n            <Button\n              invert={false}\n              title=\"Register Now\"\n              icon={false}\n              type=\"submit\"\n              disabled={isSubmitting || !dirty}\n            />\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n","import { WelcomeLayout } from \"components/WelcomeLayout/WelcomeLayout\";\nimport { useParams } from \"react-router-dom\";\nimport { LoginForm } from \"components/forms/LoginForm/LoginForm\";\nimport { RegisterForm } from \"components/forms/RegisterForm/RegisterForm\";\nimport { Suspense } from \"react\";\n\nconst Auth = () => {\n  const { id } = useParams();\n  const getForm = (id) => {\n    switch(id) {\n      case 'login':\n        return <LoginForm />;\n      case 'register':\n        return <RegisterForm />;\n      default:\n        return <LoginForm />;\n    }\n  }\n  return (\n    <Suspense fallback={<p>Loading...</p>}>\n    <WelcomeLayout>\n      {getForm(id)}\n    </WelcomeLayout>\n    </Suspense>\n  );\n};\n\nexport default Auth;\n","import * as Yup from \"yup\";\n\nexport const validationLoginSchema = Yup.object().shape({\n  email: Yup.string().required(\"Is Required\"),\n  password: Yup.string().required(\"Is Required\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationRegistrSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationHelpSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  message: Yup.string()\n    .required(\"Is Required\")\n    .min(10, \"The message must contain at least 10 characters\")\n    .max(200, \"The message must contain less than 200 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationNewBoardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Required\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  icon: Yup.string().required(\"Is Required\"),\n\n  background: Yup.string(),\n});\n","import * as Yup from \"yup\";\n\nexport const validationCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Required\")\n    .min(2, \"The title must contain at least 2 characters\")\n    .max(200, \"The title must contain less than 200 characters\"),\n\n  description: Yup.string()\n    .min(5, \"The description must contain at least 5 characters\")\n    .max(1000, \"The description must contain less than 1000 characters\")\n    .required(\"Is Required\"),\n\n  priority: Yup.string().required(\"Is Required\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationColumnSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Required\")\n    .max(32, \"The title must contain less than 32 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationEditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string(),\n/*     .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"), */\n\n  userPhoto: Yup.mixed()\n    .nullable(true)\n    .test(\"fileSize\", \"File size too large\", (value) => {\n      return !value || (value && value.size <= 4096000); // ~4MB\n    })\n    .test(\"fileType\", \"Invalid file type\", (value) => {\n      return (\n        !value ||\n        (value && [\"image/jpeg\", \"image/png\", \"image/gif\"].includes(value.type))\n      );\n    }),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WelcomeLayout_container__KDJpp\",\"content\":\"WelcomeLayout_content__VuvIh\",\"title\":\"WelcomeLayout_title__cgXTQ\",\"logowrap\":\"WelcomeLayout_logowrap__ouqz4\",\"regbtn\":\"WelcomeLayout_regbtn__OO93W\",\"paragraph\":\"WelcomeLayout_paragraph__TpzpT\",\"logintext\":\"WelcomeLayout_logintext__Sno+C\",\"gogglelogin\":\"WelcomeLayout_gogglelogin__-KTdA\",\"wecomeimage\":\"WelcomeLayout_wecomeimage__6HtMi\"};"],"names":["_ref","_ref$type","type","title","_ref$icon","icon","_ref$invert","invert","action","_jsxs","className","css","onClick","children","_jsx","width","height","stroke","href","sprite","WelcomeLayout","container","content","ErrorTip","e","Icon","name","LoginForm","error","useAuth","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setType","_useState3","_useState4","iconName","setIconName","Formik","initialValues","email","password","validationSchema","validationLoginSchema","onSubmit","values","actions","login","resetForm","validationOnBlur","isSubmitting","dirty","s","Form","Field","placeholder","autoFocus","ErrorMessage","component","value","gettype","currentTarget","console","log","handleShow","Button","disabled","axios","defaults","baseURL","registerUser","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","data","res","wrap","_context2","prev","next","post","sent","abrupt","stop","_x","apply","arguments","RegisterForm","_useState5","_useState6","setError","handleSubmit","_callee","_context","t0","response","message","_x2","validationRegistrSchema","id","useParams","Suspense","fallback","getForm","Yup","shape","required","matches","min","max","validationHelpSchema","validationNewBoardSchema","background","validationCardSchema","description","priority","validationColumnSchema","validationEditProfileSchema","userPhoto","nullable","test","size","includes"],"sourceRoot":""}