{"version":3,"file":"static/js/712.32ecd334.chunk.js","mappings":"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","sources":["webpack://taskpro/./src/components/WelcomeLayout/WelcomeLayout.module.css?653c","components/WelcomeLayout/WelcomeLayout.jsx","schems/validationLoginSchema.js","schems/validationRegisterSchema.js","schems/validationHelpSchema.js","schems/validationNewBoardSchema.js","schems/validationCardSchema.js","schems/validationColumnSchema.js","schems/validationEditProfileSchema.js","components/Button/Button.jsx","webpack://taskpro/./src/components/forms/LoginForm/LoginForm.module.css?8bf3","components/forms/LoginForm/LoginForm.js","webpack://taskpro/./src/components/forms/RegisterForm/Registerform.module.css?084e","components/forms/RegisterForm/RegisterForm.js","pages/Auth.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WelcomeLayout_container__KDJpp\",\"content\":\"WelcomeLayout_content__VuvIh\"};","import css from './WelcomeLayout.module.css'\nexport const WelcomeLayout = ({children}) => {\n    return(\n        <div className={css.container}>\n            <div className={css.content}>\n                {children}\n            </div>\n        </div>\n    )\n}","import * as Yup from \"yup\";\n\nexport const validationLoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationRegistrSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationHelpSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  comment: Yup.string()\n    .required(\"Is Require\")\n    .min(10, \"The name must contain at least 10 characters\")\n    .max(200, \"The name must contain less than 200 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationNewBoardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Require\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  icon: Yup.string().required(\"Is Require\"),\n\n  background: Yup.string().required(\"Is Require\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Require\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  description: Yup.string()\n    .min(5, \"The description must contain at least 5 characters\")\n    .max(200, \"The description must contain less than 200 characters\"),\n\n  labelColor: Yup.string().required(\"Is Require\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationColumnSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Require\")\n    .min(3, \"The title must contain at least 3 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationEditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Require\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n\n  userPhoto: Yup.mixed()\n    .nullable(true)\n    .test(\"fileSize\", \"File size too large\", (value) => {\n      return !value || (value && value.size <= 4096000); // ~4MB\n    })\n    .test(\"fileType\", \"Invalid file type\", (value) => {\n      return (\n        !value ||\n        (value && [\"image/jpeg\", \"image/png\", \"image/gif\"].includes(value.type))\n      );\n    }),\n});\n","import React from \"react\";\n\nconst Button = ({\n    type = \"button\",\n    className,\n    children,\n    ...otherProps\n  }) => {\n    return (\n      <button type={type} className={className}\n        {...otherProps} \n      >\n        {children}\n      </button>\n    );\n  };\n  export default Button;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"LoginForm_wrap__SAWwp\",\"regtitle\":\"LoginForm_regtitle__dt-BC\",\"regtitleActive\":\"LoginForm_regtitleActive__O5ybS\",\"label\":\"LoginForm_label__pAfdy\",\"input\":\"LoginForm_input__iqQPD\",\"field\":\"LoginForm_field__6D429\",\"titleFild\":\"LoginForm_titleFild__--O5+\",\"btn\":\"LoginForm_btn__MgabS\",\"error\":\"LoginForm_error__XSPda\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationLoginSchema } from \"schems\";\nimport Button from \"components/Button/Button\";\nimport s from \"./LoginForm.module.css\"\nimport { useUser } from \"hooks/useUser\";\n\nexport const LoginForm = () => {\n  const {userLogin} = useUser();\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    \n    try{\n      await userLogin(values);\n      setSubmitting(false);\n      resetForm();\n    } catch(err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationLoginSchema}\n      onSubmit={handleSubmit}\n      validateOnBlur\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <div className={s.wrap}>\n        <Form >\n          <div className={s.titleFild}>\n          <a  href=\"register\" className= {s.regtitle}>Registration</a>\n          <p  className= {s.regtitleActive}>Log In</p>\n          </div>\n          <div className={s.field}>\n          <label className={s.label}>\n            <Field className= {s.input} name=\"email\" placeholder=\"Enter your email\" type=\"email\" />\n            <ErrorMessage name=\"email\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n\n          <label className={s.label}>\n            <Field \n             className= {s.input}\n              name=\"password\"\n              placeholder=\"Confirm a password\"\n              type=\"password\"\n            />\n            <ErrorMessage name=\"password\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n          </div>\n          < Button className={s.btn} type=\"submit\" disabled={isSubmitting || !isValid || !dirty}>Log In Now</Button>\n        </Form>\n       \n             </div>\n      )}\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Registerform_wrap__EFELx\",\"titleFild\":\"Registerform_titleFild__ioAJn\",\"regtitle\":\"Registerform_regtitle__2KOSk\",\"regtitleActive\":\"Registerform_regtitleActive__vQYtO\",\"label\":\"Registerform_label__0MSKF\",\"input\":\"Registerform_input__ozt8M\",\"field\":\"Registerform_field__3T2hC\",\"btn\":\"Registerform_btn__-Ehju\",\"error\":\"Registerform_error__AFMaO\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationRegistrSchema } from \"schems\";\nimport Button from \"..//..//Button/Button.jsx\"\nimport s from \"./Registerform.module.css\"\nimport { useUser } from \"hooks/useUser\";\n\nexport const RegisterForm = () => {\n  const {userRegister} = useUser();\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      await userRegister(values);\n      setSubmitting(false);\n      resetForm();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationRegistrSchema}\n      onSubmit={handleSubmit}\n      validateOnBlur\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <div className={s.wrap}>\n        <Form >\n          <div className={s.titleFild}>\n          <p  className= {s.regtitleActive}>Registration</p>\n          <a href=\"log\"   className= {s.regtitle}>Log In</a>\n          </div>\n         < div className={s.field}>\n          <label className= {s.label}>\n            <Field className= {s.input}\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              autoComplete=\"off\"\n            />\n            <ErrorMessage name=\"name\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n\n          <label className= {s.label}>\n            <Field className= {s.input}\n              name=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"email\"\n              autoComplete=\"off\"\n            />\n            <ErrorMessage name=\"email\"\n            component=\"div\"\n            className={s.error} />\n          </label>\n\n          <label className= {s.label}>\n            <Field  className= {s.input}\n              name=\"password\"\n              placeholder=\"Create a password\"\n              type=\"password\"\n              autoComplete=\"off\"\n            />\n            <ErrorMessage \n            name=\"password\" \n            component=\"div\"\n            className={s.error}\n            />\n          </label>\n          </ div>\n          <Button className={s.btn} type=\"submit\" disabled={isSubmitting || !isValid || !dirty}> Register Now</Button>\n        </Form> \n        \n        </div>\n       \n      )}\n    </Formik>\n  );\n};\n","import { WelcomeLayout } from \"components/WelcomeLayout/WelcomeLayout\";\nimport { useParams } from \"react-router-dom\";\nimport { LoginForm } from \"components/forms/LoginForm/LoginForm\";\nimport { RegisterForm } from \"components/forms/RegisterForm/RegisterForm\";\nimport { Suspense } from \"react\";\n\nconst Auth = () => {\n  const { id } = useParams();\n  const getForm = (id) => {\n    switch(id) {\n      case 'login':\n        return <LoginForm />;\n      case 'register':\n        return <RegisterForm />;\n      default:\n        return <LoginForm />;\n    }\n  }\n  return (\n    <Suspense fallback={<p>Loading...</p>}>\n    <WelcomeLayout>\n      {getForm(id)}\n    </WelcomeLayout>\n    </Suspense>\n  );\n};\n\nexport default Auth;\n"],"names":["WelcomeLayout","_ref","children","_jsx","className","css","validationLoginSchema","Yup","shape","email","required","matches","password","min","max","validationRegistrSchema","name","comment","title","icon","background","description","labelColor","userPhoto","nullable","test","value","size","includes","type","_ref$type","otherProps","_objectWithoutProperties","_excluded","_objectSpread","LoginForm","userLogin","useUser","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setSubmitting","resetForm","wrap","_context","prev","next","t0","console","log","stop","_x","_x2","apply","arguments","Formik","initialValues","validationSchema","onSubmit","validateOnBlur","_ref3","isSubmitting","isValid","dirty","s","_jsxs","Form","href","Field","placeholder","ErrorMessage","component","Button","disabled","RegisterForm","userRegister","autoComplete","id","useParams","Suspense","fallback","getForm"],"sourceRoot":""}