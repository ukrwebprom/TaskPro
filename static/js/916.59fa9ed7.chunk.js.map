{"version":3,"file":"static/js/916.59fa9ed7.chunk.js","mappings":"uIACA,MAAsB,iBAAtB,EAAmD,sCAAnD,EAAuG,yBAAvG,EAA6I,+CAA7I,EAAoM,mB,mBCapM,EAXe,SAAHA,GAAqE,IAADC,EAAAD,EAA9DE,KAAAA,OAAI,IAAAD,EAAG,SAAQA,EAAEE,EAAKH,EAALG,MAAKC,EAAAJ,EAAEK,KAAAA,OAAI,IAAAD,GAAKA,EAAAE,EAAAN,EAAEO,OAAAA,OAAM,IAAAD,GAAMA,EAAEE,EAAMR,EAANQ,OACjE,OACEC,EAAAA,EAAAA,MAAA,UAAQP,KAAMA,EAAMQ,UAAWH,EAAQI,EAAgBA,EAASC,QAASJ,EAAOK,SAAA,CAC7ER,IACCS,EAAAA,EAAAA,KAAA,OAAKJ,UAAWH,EAAQI,EAAiBA,EAAgBE,UACvDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAM,kBAEhBF,EAAAA,EAAAA,KAAA,QAAMJ,UAAWC,EAAUE,SAAEV,MAGnC,C,8ECXac,EAAgB,SAAHjB,GAAoB,IAAfa,EAAQb,EAARa,SAC3B,OACIC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAIO,UAAUL,UAC1BC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAAA,EAAIQ,QAAQN,SAEvBA,KAIjB,C,8ICVA,EAAsB,sBAAtB,EAAsD,0B,SCCzCO,EAAU,SAAFpB,GAAa,IAARqB,EAACrB,EAADqB,EACtB,OACIZ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQE,SAAA,EACpBC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAM,YACZF,EAAAA,EAAAA,KAAA,KAAGJ,UAAWC,EAAYE,SAAEQ,MAGxC,ECRA,EAAuB,wBAAvB,EAA0D,4BAA1D,EAAuG,kCAAvG,EAAiJ,yBAAjJ,EAAkL,yBAAlL,EAAmN,yBAAnN,EAAwP,6BAAxP,EAA0T,yBAA1T,EAA6V,2B,wCCUhVC,EAAY,WACvB,IAAQC,GAAUC,EAAAA,EAAAA,KAAVD,MACFE,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,YAAWC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCzB,EAAI2B,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAgCJ,EAAAA,EAAAA,UAAS,aAAYK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA9CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAwB5B,OACEnB,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CACLC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,GAClBC,SAjBiB,SAACC,EAAQC,GAC5BnB,GACEoB,EAAAA,EAAAA,IAAM,CACJP,MAAOK,EAAOL,MACdC,SAAUI,EAAOJ,YAGrBK,EAAQE,WACV,EAS2BjC,SAEtB,SAAAb,GAAA,IAAG+C,EAAY/C,EAAZ+C,aAAcC,EAAOhD,EAAPgD,QAASC,EAAMjD,EAANiD,OAAQC,EAAKlD,EAALkD,MAAK,OACtCpC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWyC,EAAOtC,UACrBJ,EAAAA,EAAAA,MAAC2C,EAAAA,GAAI,CAAAvC,SAAA,EACHJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWyC,EAAYtC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGuC,KAAK,WAAW3C,UAAWyC,EAAWtC,SAAC,kBAG1CC,EAAAA,EAAAA,KAAA,KAAGJ,UAAWyC,EAAiBtC,SAAC,cAEjCU,IAAST,EAAAA,EAAAA,KAACM,EAAQ,CAACC,EAAGE,KACvBd,EAAAA,EAAAA,MAAA,OAAKC,UAAWyC,EAAQtC,SAAA,EACtBJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWyC,EAAQtC,SAAA,EACxBC,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,CACJ5C,UAAWyC,EACXnC,KAAK,QACLuC,YAAY,mBACZrD,KAAK,QACLsD,WAAS,EACTC,OAAQT,EAAQ7C,OAAS8C,EAAO9C,SAElCW,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACX1C,KAAK,QACL2C,UAAU,MACVjD,UAAWyC,QAIf1C,EAAAA,EAAAA,MAAA,SAAOC,UAAWyC,EAAQtC,SAAA,EACxBC,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,CACJ5C,UAAWyC,EACXnC,KAAK,WACLuC,YAAY,qBACZrD,KAAMA,EACNuD,OAAQT,EAAQ7C,OAAS8C,EAAO9C,SAElCW,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACX1C,KAAK,WACL2C,UAAU,MACVjD,UAAWyC,KAEbrC,EAAAA,EAAAA,KAAA,UACEZ,KAAK,SACLQ,UAAWyC,EACXS,MAAO1D,EACPU,QAAS,SAACS,GAAC,OA3ER,SAACA,GAClB,IAAMwC,EAAUxC,EAAEyC,cAAcF,MAChCG,QAAQC,IAAIH,GACI,aAAZA,GACF9B,EAAQ,QACRI,EAAY,qBAEZJ,EAAQ,YACRI,EAAY,aAEhB,CAiEgC8B,CAAW5C,EAAE,EAACR,UAE9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAMkB,aAIlBpB,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACL3D,QAAQ,EACRJ,MAAM,aACNE,MAAM,EACNH,KAAK,SACLiE,SAAUpB,IAAiBG,QAG3B,GAId,EC7GA,EAAuB,2BAAvB,EAA8D,gCAA9D,EAAyG,+BAAzG,EAAyJ,qCAAzJ,EAAsM,4BAAtM,EAA0O,4BAA1O,EAA8Q,4BAA9Q,EAAkV,4BAAlV,EAAoc,8BCUvbkB,EAAe,WAC1B,IAAM3C,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,YAAWC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCzB,EAAI2B,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAgCJ,EAAAA,EAAAA,UAAS,aAAYK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA9CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACpBV,GAAUC,EAAAA,EAAAA,KAAVD,MAyBR,OACET,EAAAA,EAAAA,KAACsB,EAAAA,GAAM,CACLC,cAAe,CACbrB,KAAM,GACNsB,MAAO,GACPC,SAAU,IAEZC,iBAAkB6B,EAAAA,GAClB3B,SAnBiB,SAACC,EAAQC,GAC5BnB,GACE6C,EAAAA,EAAAA,IAAS,CACPtD,KAAM2B,EAAO3B,KACbsB,MAAOK,EAAOL,MACdC,SAAUI,EAAOJ,YAGrBK,EAAQE,WACV,EAU2BjC,SAEtB,SAAAb,GAAA,IAAG+C,EAAY/C,EAAZ+C,aAAcC,EAAOhD,EAAPgD,QAASC,EAAMjD,EAANiD,OAAQC,EAAKlD,EAALkD,MAAK,OACtCpC,EAAAA,EAAAA,KAAA,OAAKJ,UAAWyC,EAAOtC,UACrBJ,EAAAA,EAAAA,MAAC2C,EAAAA,GAAI,CAAAvC,SAAA,EACHJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWyC,EAAYtC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAGJ,UAAWyC,EAAiBtC,SAAC,kBAChCC,EAAAA,EAAAA,KAAA,KAAGuC,KAAK,MAAM3C,UAAWyC,EAAWtC,SAAC,cAItCU,IAAST,EAAAA,EAAAA,KAACM,EAAQ,CAACC,EAAGE,KACvBd,EAAAA,EAAAA,MAAA,OAAKC,UAAWyC,EAAQtC,SAAA,EACtBJ,EAAAA,EAAAA,MAAA,SAAOC,UAAWyC,EAAQtC,SAAA,EACxBC,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,CACJ5C,UAAWyC,EACXnC,KAAK,OACLuC,YAAY,kBACZC,WAAS,EACTC,OAAQT,EAAQ7C,OAAS8C,EAAO9C,SAGlCW,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CAAC1C,KAAK,OAAO2C,UAAU,MAAMjD,UAAWyC,QAGvD1C,EAAAA,EAAAA,MAAA,SAAOC,UAAWyC,EAAQtC,SAAA,EACxBC,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,CACJ5C,UAAWyC,EACXnC,KAAK,QACLuC,YAAY,mBACZrD,KAAK,QACLuD,OAAQT,EAAQ7C,OAAS8C,EAAO9C,SAElCW,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACX1C,KAAK,QACL2C,UAAU,MACVjD,UAAWyC,QAIf1C,EAAAA,EAAAA,MAAA,SAAOC,UAAWyC,EAAQtC,SAAA,EACxBC,EAAAA,EAAAA,KAACwC,EAAAA,GAAK,CACJ5C,UAAWyC,EACXnC,KAAK,WACLuC,YAAY,oBACZrD,KAAMA,EACNuD,OAAQT,EAAQ7C,OAAS8C,EAAO9C,SAElCW,EAAAA,EAAAA,KAAA,UACEZ,KAAK,SACLQ,UAAWyC,EACXS,MAAO1D,EACPU,QAAS,SAACS,GAAC,OAnFR,SAACA,GAClB,IAAMwC,EAAUxC,EAAEyC,cAAcF,MAChCG,QAAQC,IAAIH,GACI,aAAZA,GACF9B,EAAQ,QACRI,EAAY,qBAEZJ,EAAQ,YACRI,EAAY,aAEhB,CAyEgC8B,CAAW5C,EAAE,EAACR,UAE9BC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,KAAMkB,OAEdpB,EAAAA,EAAAA,KAAC4C,EAAAA,GAAY,CACX1C,KAAK,WACL2C,UAAU,MACVjD,UAAWyC,WAIjBrC,EAAAA,EAAAA,KAACoD,EAAAA,EAAM,CACL3D,QAAQ,EACRJ,MAAM,eACNE,MAAM,EACNH,KAAK,SACLiE,SAAUpB,IAAiBG,QAG3B,GAId,EChGA,EArBa,WACX,IAAQqB,GAAOC,EAAAA,EAAAA,MAAPD,GAWR,OACEzD,EAAAA,EAAAA,KAAC2D,EAAAA,SAAQ,CAACC,UAAU5D,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eAAeA,UACtCC,EAAAA,EAAAA,KAACG,EAAAA,EAAa,CAAAJ,SAZA,SAAC0D,GACf,OAAOA,GACL,IAAK,QAIL,QACE,OAAOzD,EAAAA,EAAAA,KAACQ,EAAS,IAHnB,IAAK,WACH,OAAOR,EAAAA,EAAAA,KAACsD,EAAY,IAI1B,CAIKO,CAAQJ,MAIf,C,8ICvBa9B,EAAwBmC,EAAAA,KAAaC,MAAM,CACtDvC,MAAOsC,EAAAA,KAAaE,SAAS,eAC7BvC,SAAUqC,EAAAA,KAAaE,SAAS,iBCFrBT,EAA0BO,EAAAA,KAAaC,MAAM,CACxD7D,KAAM4D,EAAAA,KACHE,SAAS,eACTC,QACC,mDACA,iEAEDC,IAAI,EAAG,+CACPC,IAAI,GAAI,iDAEX3C,MAAOsC,EAAAA,KACJE,SAAS,eACTC,QACC,oDACA,8BAGJxC,SAAUqC,EAAAA,KACPE,SAAS,eACTC,QACC,kDACA,qEAEDC,IAAI,EAAG,+CACPC,IAAI,GAAI,mDCxBAC,EAAuBN,EAAAA,KAAaC,MAAM,CACrDvC,MAAOsC,EAAAA,KACJE,SAAS,eACTC,QACC,oDACA,8BAGJI,QAASP,EAAAA,KACNE,SAAS,eACTE,IAAI,GAAI,mDACRC,IAAI,IAAK,uDCXDG,EAA2BR,EAAAA,KAAaC,MAAM,CACzD1E,MAAOyE,EAAAA,KACJE,SAAS,eACTE,IAAI,EAAG,gDAEV3E,KAAMuE,EAAAA,KAAaE,SAAS,eAE5BO,WAAYT,EAAAA,KAAaE,SAAS,iB,4FCPvBQ,EAAuBV,EAAAA,KAAaC,MAAM,CACrD1E,MAAOyE,EAAAA,KACJE,SAAS,eACTE,IAAI,EAAG,gDAEVO,YAAaX,EAAAA,KACVI,IAAI,EAAG,sDACPC,IAAI,IAAK,yDACTH,SAAS,eAEZU,SAAUZ,EAAAA,KAAaE,SAAS,gB,qECVrBW,EAAyBb,EAAAA,KAAaC,MAAM,CACvD1E,MAAOyE,EAAAA,KACJE,SAAS,eACTG,IAAI,GAAI,mD,qECHAS,EAA8Bd,EAAAA,KAAaC,MAAM,CAC5D7D,KAAM4D,EAAAA,KACHE,SAAS,eACTC,QACC,mDACA,iEAEDC,IAAI,EAAG,+CACPC,IAAI,GAAI,iDAEX3C,MAAOsC,EAAAA,KACJE,SAAS,eACTC,QACC,oDACA,8BAGJxC,SAAUqC,EAAAA,KACPE,SAAS,eACTC,QACC,kDACA,qEAEDC,IAAI,EAAG,+CACPC,IAAI,GAAI,iDAEXU,UAAWf,EAAAA,KACRgB,UAAS,GACTC,KAAK,WAAY,uBAAuB,SAACjC,GACxC,OAAQA,GAAUA,GAASA,EAAMkC,MAAQ,MAC3C,IACCD,KAAK,WAAY,qBAAqB,SAACjC,GACtC,OACGA,GACAA,GAAS,CAAC,aAAc,YAAa,aAAamC,SAASnC,EAAM1D,KAEtE,K,qBCrCJ,KAAgB,UAAY,iCAAiC,QAAU,+BAA+B,MAAQ,6BAA6B,SAAW,gCAAgC,OAAS,8BAA8B,UAAY,iCAAiC,UAAY,iCAAiC,YAAc,mCAAmC,YAAc,mC","sources":["webpack://taskpro/./src/components/Button/Btn.module.css?6107","components/Button/Button.jsx","components/WelcomeLayout/WelcomeLayout.jsx","webpack://taskpro/./src/components/forms/ErrorMessage/ErrorTip.module.css?8a09","components/forms/ErrorMessage/ErrorTip.jsx","webpack://taskpro/./src/components/forms/LoginForm/LoginForm.module.css?8bf3","components/forms/LoginForm/LoginForm.js","webpack://taskpro/./src/components/forms/RegisterForm/Registerform.module.css?084e","components/forms/RegisterForm/RegisterForm.js","pages/Auth.js","schems/validationLoginSchema.js","schems/validationRegisterSchema.js","schems/validationHelpSchema.js","schems/validationNewBoardSchema.js","schems/validationCardSchema.js","schems/validationColumnSchema.js","schems/validationEditProfileSchema.js","webpack://taskpro/./src/components/WelcomeLayout/WelcomeLayout.module.css?653c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Btn_btn__cDq+h\",\"invertBtn\":\"Btn_invertBtn__cMqwS Btn_btn__cDq+h\",\"wrapperIcon\":\"Btn_wrapperIcon__t6DwO\",\"invertIcon\":\"Btn_invertIcon__h3YY4 Btn_wrapperIcon__t6DwO\",\"title\":\"Btn_title__xBGYm\"};","import css from './Btn.module.css'\nimport Icon from 'components/Icon/Icon';\n\nconst Button = ({ type = 'button', title, icon=true, invert=false, action }) => {\n  return (\n    <button type={type} className={invert? css.invertBtn : css.btn} onClick={action} >\n      {icon && \n        <div className={invert? css.invertIcon : css.wrapperIcon}>\n          <Icon name={'#plus-icon'} />\n        </div>}\n      <span className={css.title}>{title}</span>\n    </button>\n  );\n};\nexport default Button;\n","import css from './WelcomeLayout.module.css'\n\nexport const WelcomeLayout = ({children}) => {\n    return(\n        <div className={css.container}>\n            <div className={css.content}>\n\n                {children}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"tip\":\"ErrorTip_tip__wNok-\",\"message\":\"ErrorTip_message__XvNr5\"};","import Icon from \"components/Icon/Icon\"\nimport css from './ErrorTip.module.css';\nexport const ErrorTip =({ e })=> {\n    return(\n        <div className={css.tip}>\n            <Icon name={'#error'} />\n            <p className={css.message}>{e}</p>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"LoginForm_wrap__SAWwp\",\"regtitle\":\"LoginForm_regtitle__dt-BC\",\"regtitleActive\":\"LoginForm_regtitleActive__O5ybS\",\"label\":\"LoginForm_label__pAfdy\",\"input\":\"LoginForm_input__iqQPD\",\"field\":\"LoginForm_field__6D429\",\"titleFild\":\"LoginForm_titleFild__--O5+\",\"btn\":\"LoginForm_btn__MgabS\",\"error\":\"LoginForm_error__XSPda\",\"eyeicon\":\"LoginForm_eyeicon__kkjZX\",\"mistake\":\"LoginForm_mistake__759tp\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationLoginSchema } from \"schems\";\nimport Button from \"components/Button/Button\";\nimport Icon from \"components/Icon/Icon\";\nimport { ErrorTip } from \"../ErrorMessage/ErrorTip\";\nimport s from \"./LoginForm.module.css\";\nimport { useState } from \"react\";\nimport { login } from \"redux/auth/operations\";\nimport { useDispatch } from \"react-redux\";\nimport { useAuth } from \"hooks/useAuth\";\n\nexport const LoginForm = () => {\n  const { error } = useAuth();\n  const dispatch = useDispatch();\n  const [type, setType] = useState(\"password\");\n  const [iconName, setIconName] = useState(\"#eye-icon\");\n\n  const handleShow = (e) => {\n    const gettype = e.currentTarget.value;\n    console.log(gettype);\n    if (gettype === \"password\") {\n      setType(\"text\");\n      setIconName(\"#eye-slash-icon\");\n    } else {\n      setType(\"password\");\n      setIconName(\"#eye-icon\");\n    }\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      login({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationLoginSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting, touched, errors, dirty }) => (\n        <div className={s.wrap}>\n          <Form>\n            <div className={s.titleFild}>\n              <a href=\"register\" className={s.regtitle}>\n                Registration\n              </a>\n              <p className={s.regtitleActive}>Log In</p>\n            </div>\n            {error && <ErrorTip e={error} />}\n            <div className={s.field}>\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  autoFocus\n                  onBlur={touched.title && errors.title}\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className={s.error}\n                />\n              </label>\n\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"password\"\n                  placeholder=\"Confirm a password\"\n                  type={type}\n                  onBlur={touched.title && errors.title}\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className={s.error}\n                />\n                <button\n                  type=\"button\"\n                  className={s.eyeicon}\n                  value={type}\n                  onClick={(e) => handleShow(e)}\n                >\n                  <Icon name={iconName} />\n                </button>\n              </label>\n            </div>\n            <Button\n              invert={false}\n              title=\"Log In Now\"\n              icon={false}\n              type=\"submit\"\n              disabled={isSubmitting || !dirty}\n            />\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Registerform_wrap__EFELx\",\"titleFild\":\"Registerform_titleFild__ioAJn\",\"regtitle\":\"Registerform_regtitle__2KOSk\",\"regtitleActive\":\"Registerform_regtitleActive__vQYtO\",\"label\":\"Registerform_label__0MSKF\",\"input\":\"Registerform_input__ozt8M\",\"field\":\"Registerform_field__3T2hC\",\"btn\":\"Registerform_btn__-Ehju\",\"error\":\"Registerform_error__AFMaO\",\"mistake\":\"Registerform_mistake__iGAvQ\",\"wrong\":\"Registerform_wrong__7hoPD\",\"eyeicon\":\"Registerform_eyeicon__fKI1+\"};","import { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport { validationRegistrSchema } from \"schems\";\nimport { useState } from \"react\";\nimport Button from \"..//..//Button/Button.jsx\";\nimport { ErrorTip } from \"../ErrorMessage/ErrorTip\";\nimport s from \"./Registerform.module.css\";\nimport Icon from \"components/Icon/Icon\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\nimport { useAuth } from \"hooks/useAuth.js\";\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [type, setType] = useState(\"password\");\n  const [iconName, setIconName] = useState(\"#eye-icon\");\n  const { error } = useAuth();\n\n  const handleShow = (e) => {\n    const gettype = e.currentTarget.value;\n    console.log(gettype);\n    if (gettype === \"password\") {\n      setType(\"text\");\n      setIconName(\"#eye-slash-icon\");\n    } else {\n      setType(\"password\");\n      setIconName(\"#eye-icon\");\n    }\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        password: \"\",\n      }}\n      validationSchema={validationRegistrSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting, touched, errors, dirty }) => (\n        <div className={s.wrap}>\n          <Form>\n            <div className={s.titleFild}>\n              <p className={s.regtitleActive}>Registration</p>\n              <a href=\"log\" className={s.regtitle}>\n                Log In\n              </a>\n            </div>\n            {error && <ErrorTip e={error}/>}\n            <div className={s.field}>\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"name\"\n                  placeholder=\"Enter your name\"\n                  autoFocus\n                  onBlur={touched.title && errors.title}\n                />\n\n                <ErrorMessage name=\"name\" component=\"div\" className={s.error} />\n              </label>\n\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  onBlur={touched.title && errors.title}\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className={s.error}\n                />\n              </label>\n\n              <label className={s.label}>\n                <Field\n                  className={s.input}\n                  name=\"password\"\n                  placeholder=\"Create a password\"\n                  type={type}\n                  onBlur={touched.title && errors.title}\n                />\n                <button\n                  type=\"button\"\n                  className={s.eyeicon}\n                  value={type}\n                  onClick={(e) => handleShow(e)}\n                >\n                  <Icon name={iconName} />\n                </button>\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className={s.error}\n                />\n              </label>\n            </div>\n            <Button\n              invert={false}\n              title=\"Register Now\"\n              icon={false}\n              type=\"submit\"\n              disabled={isSubmitting || !dirty}\n            />\n          </Form>\n        </div>\n      )}\n    </Formik>\n  );\n};\n","import { WelcomeLayout } from \"components/WelcomeLayout/WelcomeLayout\";\nimport { useParams } from \"react-router-dom\";\nimport { LoginForm } from \"components/forms/LoginForm/LoginForm\";\nimport { RegisterForm } from \"components/forms/RegisterForm/RegisterForm\";\nimport { Suspense } from \"react\";\n\nconst Auth = () => {\n  const { id } = useParams();\n  const getForm = (id) => {\n    switch(id) {\n      case 'login':\n        return <LoginForm />;\n      case 'register':\n        return <RegisterForm />;\n      default:\n        return <LoginForm />;\n    }\n  }\n  return (\n    <Suspense fallback={<p>Loading...</p>}>\n    <WelcomeLayout>\n      {getForm(id)}\n    </WelcomeLayout>\n    </Suspense>\n  );\n};\n\nexport default Auth;\n","import * as Yup from \"yup\";\n\nexport const validationLoginSchema = Yup.object().shape({\n  email: Yup.string().required(\"Is Required\"),\n  password: Yup.string().required(\"Is Required\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationRegistrSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationHelpSchema = Yup.object().shape({\n  email: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  message: Yup.string()\n    .required(\"Is Required\")\n    .min(10, \"The message must contain at least 10 characters\")\n    .max(200, \"The message must contain less than 200 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationNewBoardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Required\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  icon: Yup.string().required(\"Is Required\"),\n\n  background: Yup.string().required(\"Is Required\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationCardSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Required\")\n    .min(3, \"The title must contain at least 3 characters\"),\n\n  description: Yup.string()\n    .min(5, \"The description must contain at least 5 characters\")\n    .max(200, \"The description must contain less than 200 characters\")\n    .required(\"Is Required\"),\n\n  priority: Yup.string().required(\"Is Required\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationColumnSchema = Yup.object().shape({\n  title: Yup.string()\n    .required(\"Is Required\")\n    .max(32, \"The title must contain less than 32 characters\"),\n});\n","import * as Yup from \"yup\";\n\nexport const validationEditProfileSchema = Yup.object().shape({\n  name: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/? ]*$/,\n      \"The name must contain only Latin letters, numbers and symbols\"\n    )\n    .min(2, \"The name must contain at least 2 characters\")\n    .max(32, \"The name must contain less than 32 characters\"),\n\n  email: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      \"This must be a valid email\"\n    ),\n\n  password: Yup.string()\n    .required(\"Is Required\")\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]+$/,\n      \"The password must contain only Latin letters, numbers and symbols\"\n    )\n    .min(8, \"Password must contain at least 8 characters\")\n    .max(64, \"Password must contain less than 64 characters\"),\n\n  userPhoto: Yup.mixed()\n    .nullable(true)\n    .test(\"fileSize\", \"File size too large\", (value) => {\n      return !value || (value && value.size <= 4096000); // ~4MB\n    })\n    .test(\"fileType\", \"Invalid file type\", (value) => {\n      return (\n        !value ||\n        (value && [\"image/jpeg\", \"image/png\", \"image/gif\"].includes(value.type))\n      );\n    }),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WelcomeLayout_container__KDJpp\",\"content\":\"WelcomeLayout_content__VuvIh\",\"title\":\"WelcomeLayout_title__cgXTQ\",\"logowrap\":\"WelcomeLayout_logowrap__ouqz4\",\"regbtn\":\"WelcomeLayout_regbtn__OO93W\",\"paragraph\":\"WelcomeLayout_paragraph__TpzpT\",\"logintext\":\"WelcomeLayout_logintext__Sno+C\",\"gogglelogin\":\"WelcomeLayout_gogglelogin__-KTdA\",\"wecomeimage\":\"WelcomeLayout_wecomeimage__6HtMi\"};"],"names":["_ref","_ref$type","type","title","_ref$icon","icon","_ref$invert","invert","action","_jsxs","className","css","onClick","children","_jsx","Icon","name","WelcomeLayout","container","content","ErrorTip","e","LoginForm","error","useAuth","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setType","_useState3","_useState4","iconName","setIconName","Formik","initialValues","email","password","validationSchema","validationLoginSchema","onSubmit","values","actions","login","resetForm","isSubmitting","touched","errors","dirty","s","Form","href","Field","placeholder","autoFocus","onBlur","ErrorMessage","component","value","gettype","currentTarget","console","log","handleShow","Button","disabled","RegisterForm","validationRegistrSchema","register","id","useParams","Suspense","fallback","getForm","Yup","shape","required","matches","min","max","validationHelpSchema","message","validationNewBoardSchema","background","validationCardSchema","description","priority","validationColumnSchema","validationEditProfileSchema","userPhoto","nullable","test","size","includes"],"sourceRoot":""}